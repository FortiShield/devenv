{
  "name":        "devenv",
  "description": "Instant, easy, and predictable development environments",
  "packages": {
    "go":                          "latest",
    "runx:golangci/golangci-lint": "latest",
    "runx:mvdan/gofumpt":          "latest",
  },
  "env": {
    "GOENV": "off",
    "PATH":  "$PATH:$PWD/dist",
  },
  "shell": {
    "init_hook": [
      // Remove Go environment variables that might've been inherited from the
      // user's environment and could affect the build.
      "test -z $FISH_VERSION && \\",
      "unset       CGO_ENABLED GO111MODULE GOARCH GOFLAGS GOMOD GOOS GOROOT GOTOOLCHAIN GOWORK || \\",
      "set --erase CGO_ENABLED GO111MODULE GOARCH GOFLAGS GOMOD GOOS GOROOT GOTOOLCHAIN GOWORK",
    ],
    "scripts": {
      // Build devenv for the current platform
      "build":              "go build -o dist/devenv ./cmd/devenv",
      "build-darwin-amd64": "GOOS=darwin GOARCH=amd64 go build -o dist/devenv-darwin-amd64 ./cmd/devenv",
      "build-darwin-arm64": "GOOS=darwin GOARCH=arm64 go build -o dist/devenv-darwin-arm64 ./cmd/devenv",
      "build-linux-amd64":  "GOOS=linux GOARCH=amd64 go build -o dist/devenv-linux-amd64 ./cmd/devenv",
      "build-linux-arm64":  "GOOS=linux GOARCH=arm64 go build -o dist/devenv-linux-arm64 ./cmd/devenv",
      "build-all": [
        "devenv run build-darwin-amd64",
        "devenv run build-darwin-arm64",
        "devenv run build-linux-amd64",
        "devenv run build-linux-arm64",
      ],
      // Open VSCode
      "code":               "code .",
      "lint":               "golangci-lint run --timeout 5m && scripts/gofumpt.sh",
      "fmt":                "scripts/gofumpt.sh",
      "test":               "go test -race -cover ./...",
      "test-projects-only": "DEVENV_RUN_PROJECT_TESTS=1 go test -v -timeout ${DEVENV_GOLANG_TEST_TIMEOUT:-30m} ./... -run \"TestExamples|TestScriptsWithProjects\"",
      "update-examples":    "devenv run build && go run testscripts/testrunner/updater/main.go",
      "tidy":               "go mod tidy",
    },
  },
}
